"""Initial

Revision ID: d7829e775ba1
Revises: 
Create Date: 2020-06-30 08:45:38.234677

"""
from alembic import op
import geoalchemy2
import sqlalchemy as sa
import backend


# revision identifiers, used by Alembic.
revision = 'd7829e775ba1'
down_revision = None
branch_labels = ('default',)
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contact_submission',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('message', sa.String(length=500), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contact_submission'))
    )
    op.create_index(op.f('ix_contact_submission_email'), 'contact_submission', ['email'], unique=False)
    op.create_table('group',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('group_name', sa.Unicode(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('member_count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_group')),
    sa.UniqueConstraint('group_name', name=op.f('uq_group_group_name')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('newsletter_subscribe',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(name='is_active'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_newsletter_subscribe'))
    )
    op.create_index(op.f('ix_newsletter_subscribe_email'), 'newsletter_subscribe', ['email'], unique=True)
    op.create_table('production',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_production'))
    )
    op.create_table('role',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role'))
    )
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=True)
    op.create_table('soil_type',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('yield_modifier', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_soil_type'))
    )
    op.create_table('user',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('first_name', sa.String(length=32), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(name='active'), nullable=False),
    sa.Column('confirmed_at', backend.database.types.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('external_identity',
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('external_id', sa.Unicode(length=255), nullable=False),
    sa.Column('external_user_name', sa.Unicode(length=255), nullable=True),
    sa.Column('local_user_id', sa.Integer(), nullable=False),
    sa.Column('provider_name', sa.Unicode(length=50), nullable=False),
    sa.Column('access_token', sa.Unicode(length=512), nullable=True),
    sa.Column('alt_token', sa.Unicode(length=512), nullable=True),
    sa.Column('token_secret', sa.Unicode(length=512), nullable=True),
    sa.ForeignKeyConstraint(['local_user_id'], ['user.id'], name=op.f('fk_external_identity_local_user_id_user'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('external_id', 'local_user_id', 'provider_name', name='pk_external_identity'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('group_permission',
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('perm_name', sa.Unicode(length=64), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name=op.f('fk_group_permission_group_id_group'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('group_id', 'perm_name', name='pk_group_permission'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('resource',
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('resource_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('ordering', sa.Integer(), nullable=False),
    sa.Column('resource_name', sa.Unicode(length=100), nullable=False),
    sa.Column('resource_type', sa.Unicode(length=30), nullable=False),
    sa.Column('owner_group_id', sa.Integer(), nullable=True),
    sa.Column('owner_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_group_id'], ['group.id'], name=op.f('fk_resource_owner_group_id_group'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['owner_user_id'], ['user.id'], name=op.f('fk_resource_owner_user_id_user'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['parent_id'], ['resource.resource_id'], name=op.f('fk_resource_parent_id_resource'), onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('resource_id', name=op.f('pk_resource')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_resource_owner_group_id'), 'resource', ['owner_group_id'], unique=False)
    op.create_index(op.f('ix_resource_owner_user_id'), 'resource', ['owner_user_id'], unique=False)
    op.create_table('user_group',
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name=op.f('fk_user_group_group_id_group'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_group_user_id_user'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('group_id', 'user_id', name=op.f('pk_user_group')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('user_permission',
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('perm_name', sa.Unicode(length=64), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_permission_user_id_user'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'perm_name', name='pk_user_permission'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('user_role',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('role_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_user_role_role_id_role')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_role_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name=op.f('pk_user_role'))
    )
    op.create_table('farm',
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['resource.resource_id'], name=op.f('fk_farm_id_resource'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_farm')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('group_resource_permission',
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('perm_name', sa.Unicode(length=50), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name=op.f('fk_group_resource_permission_group_id_group'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.resource_id'], name=op.f('fk_group_resource_permission_resource_id_resource'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('group_id', 'resource_id', 'perm_name', name='pk_group_resource_permission'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('profile',
    sa.Column('display_name', sa.String(length=64), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['resource.resource_id'], name=op.f('fk_profile_id_resource'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_profile')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('user_resource_permission',
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('perm_name', sa.Unicode(length=64), nullable=False),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.resource_id'], name=op.f('fk_user_resource_permission_resource_id_resource'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_resource_permission_user_id_user'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'resource_id', 'perm_name', name='pk_user_resource_permission'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('field',
    sa.Column('title', sa.String(length=64), nullable=False),
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=False),
    sa.Column('farm_id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['farm_id'], ['farm.id'], name=op.f('fk_field_farm_id_farm'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id'], ['resource.resource_id'], name=op.f('fk_field_id_resource'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_field')),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('field_detail',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('created_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', backend.database.types.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('area', sa.Float(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('shape', geoalchemy2.types.Geometry(geometry_type='POLYGON', from_text='ST_GeomFromEWKT', name='geometry'), nullable=False),
    sa.Column('soil_type_id', sa.BigInteger(), nullable=False),
    sa.Column('field_id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], name=op.f('fk_field_detail_field_id_field'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['soil_type_id'], ['soil_type.id'], name=op.f('fk_field_detail_soil_type_id_soil_type')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_field_detail'))
    )
    op.create_table('field_production',
    sa.Column('field_id', sa.BigInteger(), nullable=False),
    sa.Column('production_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], name=op.f('fk_field_production_field_id_field')),
    sa.ForeignKeyConstraint(['production_id'], ['production.id'], name=op.f('fk_field_production_production_id_production')),
    sa.PrimaryKeyConstraint('field_id', 'production_id', name=op.f('pk_field_production'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('field_production')
    op.drop_table('field_detail')
    op.drop_table('field')
    op.drop_table('user_resource_permission')
    op.drop_table('profile')
    op.drop_table('group_resource_permission')
    op.drop_table('farm')
    op.drop_table('user_role')
    op.drop_table('user_permission')
    op.drop_table('user_group')
    op.drop_index(op.f('ix_resource_owner_user_id'), table_name='resource')
    op.drop_index(op.f('ix_resource_owner_group_id'), table_name='resource')
    op.drop_table('resource')
    op.drop_table('group_permission')
    op.drop_table('external_identity')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('soil_type')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.drop_table('role')
    op.drop_table('production')
    op.drop_index(op.f('ix_newsletter_subscribe_email'), table_name='newsletter_subscribe')
    op.drop_table('newsletter_subscribe')
    op.drop_table('group')
    op.drop_index(op.f('ix_contact_submission_email'), table_name='contact_submission')
    op.drop_table('contact_submission')
    # ### end Alembic commands ###
